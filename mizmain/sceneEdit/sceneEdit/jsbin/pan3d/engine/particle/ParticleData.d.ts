declare module Pan3d {
    class ParticleData {
        version: number;
        _beginTime: number;
        _delayedTime: number;
        _width: number;
        _height: number;
        _widthFixed: boolean;
        _heightFixed: boolean;
        _tileMode: boolean;
        _originWidthScale: number;
        _originHeightScale: number;
        _eyeDistance: number;
        _alphaMode: number;
        _uSpeed: number;
        _vSpeed: number;
        _animLine: number;
        _animRow: number;
        _animInterval: number;
        _renderPriority: number;
        _distortion: boolean;
        _isUV: boolean;
        _isU: boolean;
        _isV: boolean;
        _life: number;
        _watchEye: boolean;
        _ziZhuanAngly: Vector3D;
        _isZiZhuan: boolean;
        _center: Vector3D;
        overAllScale: number;
        _materialUrl: string;
        materialParam: MaterialParam;
        materialParamData: any;
        objData: ObjData;
        timelineData: TimeLineData;
        rotationV3d: Vector3D;
        center: Vector3D;
        vcmatData: Float32Array;
        destory(): void;
        uploadGpu(): void;
        regShader(): void;
        initVcData(): void;
        creatPartilce(): Display3DParticle;
        getParticle(): Display3DParticle;
        setAllByteInfo($byte: Pan3dByteArray): void;
        private materialByteUrl;
        private onMaterialLoad;
        private readMaterialPara;
        private readTempCurve;
        private readItems;
        private makeCurveData;
        private getBzData;
        private drawbezier;
        private mathmidpoint;
        private readMaterialParaConAry;
        setFloat32Vec(key: string, ary: Array<number>): void;
        setFloat32Mat(key: string, ary: Float32Array): void;
    }
}
