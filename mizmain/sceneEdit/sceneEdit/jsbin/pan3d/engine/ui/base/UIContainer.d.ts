declare module Pan3d {
    class UIConatiner {
        protected _x: number;
        protected _y: number;
        protected _width: number;
        protected _height: number;
        protected _left: number;
        protected _right: number;
        protected _center: number;
        protected _xType: number;
        protected _top: number;
        protected _bottom: number;
        protected _middle: number;
        protected _yType: number;
        perent: any;
        protected _list: Array<UICompenent>;
        renderList: Array<UIRenderComponent>;
        protected _maskList: Array<UIMask>;
        private _hasStage;
        virtualContainerList: Array<UIVirtualContainer>;
        private _hasLoad;
        private _completeFun;
        private _isLoading;
        private _needShowLoading;
        private _interfaceUI;
        private _layer;
        private _uiScale;
        uiScale: number;
        layer: number;
        interfaceUI: boolean;
        constructor();
        load($complateFun: Function, $needShowLoading?: boolean): void;
        readonly hasLoad: boolean;
        protected makeBaseWinUi(): void;
        applyLoad(): void;
        uiLoadComplete: boolean;
        applyLoadComplete(): void;
        hasStage: boolean;
        setUiListVisibleByItem($arr: Array<UICompenent>, $flag: boolean): void;
        onAdd(): void;
        onRemove(): void;
        addChild($ui: UICompenent): UICompenent;
        addVirtualContainer($con: UIVirtualContainer): void;
        removeVirtualContainer($con: UIVirtualContainer): void;
        addUIList($ary: Array<string>, $uiRender: UIRenderComponent): Array<UICompenent>;
        getUIList($ary: Array<string>, $uiRender: UIRenderComponent): Array<UICompenent>;
        addEvntBut($name: string, $uiRender: UIRenderComponent): any;
        addEvntButUp($name: string, $uiRender: UIRenderComponent): any;
        protected removeEvntBut($ui: UICompenent): void;
        protected butClik(evt: InteractiveEvent): void;
        protected renderSetVisibel($list: Array<UIRenderComponent>, value: boolean): void;
        removeChild($ui: UICompenent): void;
        removeAll(): void;
        addMask($mask: UIMask): void;
        removeMaks($mask: UIMask): void;
        addRender($uiRender: UIRenderComponent): void;
        addRenderAt($uiRender: UIRenderComponent, $idx: number): void;
        removeRender($uiRender: UIRenderComponent): void;
        readonly panelScale: number;
        resize(): void;
        resizeVirtualList(): void;
        left: number;
        right: number;
        center: number;
        top: number;
        bottom: number;
        middle: number;
        width: number;
        height: number;
        applyChild(): void;
        x: number;
        y: number;
        dispose(): void;
        setSizeForPanelUiCopy($ui: UICompenent, $uiName: string, $uiRender: UIRenderComponent): void;
        protected makeBaseUiatlas(w: number, h: number): UIAtlas;
    }
    class Dis2DUIContianerBase extends UIConatiner {
        constructor();
        update(t: number): void;
        clearOneTemp(): void;
    }
}
