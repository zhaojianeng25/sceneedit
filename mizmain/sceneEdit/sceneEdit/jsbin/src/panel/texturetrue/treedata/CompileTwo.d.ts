declare module materialui {
    import TextureCube = Pan3d.TextureCube;
    class CompileTwo {
        static SPACE: string;
        static COMMA: string;
        static END: string;
        static FC: string;
        static FT: string;
        static TEXTURE: string;
        static FS: string;
        static VI: string;
        static OP: string;
        static FO: string;
        static XYZ: string;
        static XY: string;
        static X: string;
        static Y: string;
        static Z: string;
        static W: string;
        static ZW: string;
        static MOV: string;
        static ONE_FLOAT: string;
        static ZERO: string;
        static ONE: string;
        static TWO: string;
        static TWO_FLOAT: string;
        static THREE: string;
        static FOUR: string;
        static LN: string;
        static texType: string;
        static TEX_2D: string;
        static TEX_LINEAR: string;
        static TEX_NEAREST: string;
        static TEX_WRAP_REPEAT: string;
        static TEX_WRAP_CLAMP: string;
        static LEFT_BRACKET: string;
        static RIGHT_BRACKET: string;
        static texCubeType: string;
        static TEX: string;
        static ADD: string;
        static SUB: string;
        static MUL: string;
        static DIV: string;
        static ADD_MATH: string;
        static SUB_MATH: string;
        static MUL_MATH: string;
        static MUL_EQU_MATH: string;
        static DIV_MATH: string;
        static RCP: string;
        static MIN: string;
        static MAX: string;
        static FRC: string;
        static SQT: string;
        static RSQ: string;
        static POW: string;
        static LOG: string;
        static EXP: string;
        static NRM: string;
        static SIN: string;
        static COS: string;
        static CRS: string;
        static DP3: string;
        static DOT: string;
        static DP4: string;
        static ABS: string;
        static NEG: string;
        static SAT: string;
        static LERP: string;
        static KIL: string;
        static M33: string;
        static VEC4: string;
        static VEC3: string;
        static VEC2: string;
        static EQU: string;
        static texture2D: string;
        static textureCube: string;
        static LEFT_PARENTH: string;
        static RIGHT_PARENTH: string;
        static DEFAULT_VEC4: string;
        static MIX: string;
        static REFLECT: string;
        static IF: string;
        static DISCARD: string;
        static scalelight: string;
        priorityList: Array<Array<NodeTree>>;
        private fragmentTempList;
        private fragmentTexList;
        private fragmentConstList;
        private defaultUvReg;
        private strVec;
        private texVec;
        private constVec;
        private hasTime;
        private timeSpeed;
        private timeValue;
        private useNormal;
        private useUv;
        private useLightUv;
        private fcNum;
        private _timeID;
        private _fcBeginID;
        constructor();
        private initReg;
        compile($priorityList: Array<Array<NodeTree>>, $materialTree: MaterialTree): string;
        private getMaxFc;
        private makeFc;
        private funNodeStr;
        private getGLSLStr;
        private getInputNormal;
        private getFragmentTex;
        private getFragmentTemp;
        private processTexCubeNode;
        cubeTextItem: TextureCube;
        private processTex3DNode;
        private processTexNode;
        private processFunNode;
        private FunDic;
        private processDynamicNode;
        private processNode;
        private processTimeNode;
        private processStaticNode;
        private traceFt;
        private readonly timeStr;
        private processVec3Node;
        private addConstItem;
        private setFragmentConst;
        private processOpNode;
        private initBaseFc;
    }
}
