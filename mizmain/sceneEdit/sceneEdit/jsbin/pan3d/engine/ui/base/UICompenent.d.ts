declare module Pan3d {
    class UICompenent extends EventDispatcher {
        protected _x: number;
        protected _y: number;
        protected _width: number;
        protected _height: number;
        z: number;
        data: any;
        absoluteX: number;
        absoluteY: number;
        absoluteWidth: number;
        absoluteHeight: number;
        enable: boolean;
        protected _left: number;
        protected _right: number;
        protected _center: number;
        protected _xType: number;
        protected _top: number;
        protected _bottom: number;
        protected _middle: number;
        protected _yType: number;
        name: string;
        tr: Rectangle;
        renderX: number;
        renderY: number;
        renderWidth: number;
        renderHeight: number;
        uiRender: UIRenderComponent;
        parent: UIConatiner;
        preParent: UIConatiner;
        renderData: Array<number>;
        renderData2: Array<number>;
        mouseEnable: boolean;
        scale: number;
        skinName: string;
        baseRec: any;
        isVirtual: boolean;
        vcId: number;
        protected _uvScale: number;
        private _rendering;
        constructor();
        onRenderingFun: Function;
        unRenderingFun: Function;
        rendering: boolean;
        addStage(): void;
        removeStage(): void;
        isU: boolean;
        isV: boolean;
        pushVaData(objData: ObjData, i: number, beginIndex: number): number;
        setVc(program: any, index: number): void;
        update(): void;
        applyRenderSize(): void;
        uvScale: number;
        setScale(num: number): void;
        applyAbsolutePoint(): void;
        x: number;
        y: number;
        width: number;
        height: number;
        left: number;
        right: number;
        center: number;
        top: number;
        bottom: number;
        middle: number;
        testPoint($x: number, $y: number): boolean;
        setPos($x: number, $y: number): void;
        interactiveEvent(e: InteractiveEvent): boolean;
        preShow(): void;
        preHide(): void;
    }
}
